package main

import "fmt" // пакет для форматированного ввода/вывода

// wr - функция для записи в канал
func wr(nums []int, a chan<- int) {
	defer close(a) // закрыть канал `a` после завершения работы функции
	for _, val := range nums {
		a <- val // отправка каждого значения из `nums` в канал `a`
	}
}

// rdwr - функция для чтения из канала и записи в другой канал
func rdwr(a <-chan int, b chan<- int) {
	defer close(b) // закрыть канал `b` после завершения работы функции
	for val := range a {
		b <- val * 2 // прочитать значение из `a`, умножить на 2 и отправить в `b`
	}
}

func main() {
	nums := []int{2, 3, 100, 25} // исходный список чисел

	// создание каналов без буфера для последовательной передачи данных
	a := make(chan int)
	b := make(chan int)

	// запуск горутины для записи элементов из `nums` в канал `a`
	go wr(nums, a)

	// запуск горутины для чтения из канала `a`, умножения на 2 и записи в канал `b`
	go rdwr(a, b)

	// чтение из канала `b` и печать полученных значений
	for val := range b {
		fmt.Println(val)
	}
}
